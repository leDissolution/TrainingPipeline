environment: configs/environments/pod.yaml
vars:
  MODEL_NAME: "g2b"
  DATASET: "${DATASET_BASE}_prepared/${MODEL_NAME}"

stages:
  - name: pull_stage1_from_hf
    pull_from_hf:
      model_id: LeDissolution/statsuite_stage0
      output_dir: ${ARTIFACTORY_BASE}/${MODEL_NAME}-stage0
      var_name: STAGE1_BEST

  - name: prepare_dataset
    script:
      name: ../DatasetProcessor/prepare_dataset.py
      venv: ../DatasetProcessor/.venv
      args:
        --base_path: "${DATASET_BASE}"
        --out_path: "${DATASET}"
        --with_loss: true
        --with_chats: true
        --with_synthetic: true
        --clean: true
        --model_name: "${STAGE1_BEST}"
        --devices: "0"

  - name: assemble_dataset
    script:
      name: ../DatasetProcessor/assemble_dataset.py
      venv: ../DatasetProcessor/.venv
      args:
        --base_path: "${DATASET}"

  - name: stage2_make_sweeps
    make_sweeps:
      base_config: configs/granite2b/stage2/base.yaml
      name: seeds
      param_ranges:
        peft.random_state: [42, 1234]
        run_name: ["dapth_anneal"]
        layerwise_lr.groups["tail"].lr_scale: [0.1, 0]

  - name: stage2
    env_variables:
      - name: CUDA_VISIBLE_DEVICES
        value: 0
      - name: PER_EX_TRAIN_LOG_TOPK
        value: "5"
      - name: PER_EX_TRAIN_LOG_MIN_LOSS
        value: "0.5"
      - name: PER_EX_TRAIN_LOG_TEXT
        value: "1"
    script:
      name: train.py
      args:
        --config: #${CONFIG_BASE}/granite2b/stage2/base.yaml
          sweep: configs/granite2b/stage2/seeds

  # - name: pick_best_stage2
  #   select_best:
  #     from_dir: ${ARTIFACTORY_BASE}/${MODEL_NAME}-stage2
  #     metric: exact_match
  #     prefer: max
  #     file: last_eval_metrics.json
  #     var_name: STAGE2_BEST
  #     fallback: ${ARTIFACTORY_BASE}/${MODEL_NAME}-stage2

  # - name: publish_stage2_to_hf
  #   publish_to_hf:
  #     model_id: LeDissolution/statsuite_stage2
  #     from_dir: ${STAGE2_BEST}

  - name: shutdown
    script:
      name: shutdown.py